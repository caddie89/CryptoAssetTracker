@model CAT.Models.SoldMoment_Models.SoldMomentEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>In the field below, enter the sale price.</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.SoldMomentId)

    <div class="form-group">
        @Html.Label("Moment Id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MomentId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MomentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PlayerId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PlayerId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlayerId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.MomentCategory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MomentCategory, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MomentCategory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.DateOfMoment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateOfMoment, new { htmlAttributes = new { @class = "form-control", placeholder = "Ex. \"Jan 8 2019\"" } })
            @Html.ValidationMessageFor(model => model.DateOfMoment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.MomentSet, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MomentSet, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MomentSet, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.MomentSeries, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MomentSeries, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MomentSeries, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.MomentSerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MomentSerialNumber, new { htmlAttributes = new { @class = "form-control" } }) / @Html.EditorFor(model => model.MomentCirculatingCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MomentSerialNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.MomentTier, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.MomentTier, "Select", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MomentTier, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.MomentMint, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.MomentMint, "Select", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MomentMint, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.PurchasedInPack, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.PurchasedInPack, true) Yes
            @Html.RadioButtonFor(model => model.PurchasedInPack, false) No
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.AmountInPack, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AmountInPack, new { htmlAttributes = new { id = "denom", onkeyup = "quotient()", @class = "form-control", placeholder = "If \"No\", leave blank" } })
            @Html.ValidationMessageFor(model => model.AmountInPack, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.PackPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PackPrice, new { htmlAttributes = new { id = "num", onkeyup = "quotient()", @class = "form-control", placeholder = "If \"No\", leave blank" } })
            @Html.ValidationMessageFor(model => model.PackPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.IndividualMomentPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IndividualMomentPrice, new { htmlAttributes = new { id = "quotientResult", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IndividualMomentPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Sale Price", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SoldForAmount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SoldForAmount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Sell Asset" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Assets", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        function quotient() {
            var num = document.getElementById('num').value;
            var denom = document.getElementById('denom').value;
            var result = parseFloat(num) / parseFloat(denom);
            if (!isNaN(result)) {
                result = Math.floor(result * 100) / 100;
                document.getElementById('quotientResult').value = result;
            }
        }
    </script>
}

