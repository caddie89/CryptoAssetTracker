@model CAT.Models.Moment_Models.MomentCreate

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <!--Header information above table w/"add" button-->
    <div class="container text-info">
        <div class="row" style="min-height: 8vh;">
            <section class="col align-self-end">
                <h1 style="font-weight: 500">
                    New Asset
                </h1>
            </section>
            <div class="w-100"></div>
            <section class="col align-self-center">
                <span style="font-weight: 200">
                    To add a new Asset, fill out the form below.
                </span>
            </section>
        </div><!--row-->
    </div><!--container-->

    <!--form-->
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container containerGradient">
            <div class="row align-items-center">
                <div class="col-6">

                    <div class="form-group">
                        @Html.Label("Player", htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            @Html.DropDownListFor(model => model.PlayerId, ViewData["Players"] as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PlayerId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MomentCategory, htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            @Html.EditorFor(model => model.MomentCategory, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MomentCategory, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfMoment, htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            @Html.EditorFor(model => model.DateOfMoment, new { htmlAttributes = new { @class = "form-control", placeholder = "Ex. \"Jan 8 2019\"" } })
                            @Html.ValidationMessageFor(model => model.DateOfMoment, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MomentSet, htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            @Html.EditorFor(model => model.MomentSet, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MomentSet, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MomentSeries, htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            @Html.EditorFor(model => model.MomentSeries, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MomentSeries, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MomentSerialNumber, htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            <div class="row">
                                <div class="col">
                                    @Html.EditorFor(model => model.MomentSerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MomentSerialNumber, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-1"><h3>/</h3></div>
                                <div class="col">
                                    @Html.EditorFor(model => model.MomentCirculatingCount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MomentCirculatingCount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div><!--col-->

                <div class="col-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.MomentTier, htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            @Html.EnumDropDownListFor(model => model.MomentTier, "Select", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MomentTier, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MomentMint, htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            @Html.EnumDropDownListFor(model => model.MomentMint, "Select", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MomentMint, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PurchasedInPack, htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            @Html.RadioButtonFor(model => model.PurchasedInPack, true) Yes
                            @Html.RadioButtonFor(model => model.PurchasedInPack, false) No
                            @Html.ValidationMessageFor(model => model.PurchasedInPack, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AmountInPack, htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            @Html.EditorFor(model => model.AmountInPack, new { htmlAttributes = new { id = "denom", onkeyup = "quotient()", @class = "form-control", placeholder = "If \"No\", leave blank" } })
                            @Html.ValidationMessageFor(model => model.AmountInPack, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PackPrice, htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            @Html.EditorFor(model => model.PackPrice, new { htmlAttributes = new { id = "num", onkeyup = "quotient()", @class = "form-control", placeholder = "If \"No\", leave blank" } })
                            @Html.ValidationMessageFor(model => model.PackPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IndividualMomentPrice, htmlAttributes: new { @class = "control-label col" })
                        <div class="col-10">
                            @Html.EditorFor(model => model.IndividualMomentPrice, new { htmlAttributes = new { id = "quotientResult", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IndividualMomentPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div><!--container-->

        <div class="container p-3">
            <div class="row">
                <div class="col form-group">
                    <button type="submit" class="btn btn-outline-info submit_button" style="font-size: 20px;">
                        <i class="fas fa-basketball-ball text-warning" style="font-size: 24px;"></i>
                        Add Asset
                    </button>
                </div>
            </div>
        </div>
    </div><!--form-->
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    <script type="text/javascript">
        function quotient() {
            var num = document.getElementById('num').value;
            var denom = document.getElementById('denom').value;
            var result = parseFloat(num) / parseFloat(denom);
            if (!isNaN(result)) {
                result = Math.floor(result * 100) / 100;
                document.getElementById('quotientResult').value = result;
            }
        }
    </script>
}
